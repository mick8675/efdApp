<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="sslContext" class="com.solers.security.ssl.SSLContextCreator" scope="singleton" init-method="init">
        <constructor-arg>
            <bean class="com.solers.security.password.PasswordFactoryBean">
                <property name="provider" ref="${password.provider.bean}"/>
                <property name="enumKey" value="com.solers.delivery.security.PasswordType.PKI_KEY"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.solers.security.password.PasswordFactoryBean">
                <property name="provider" ref="${password.provider.bean}"/>
                <property name="enumKey" value="com.solers.delivery.security.PasswordType.PKI_KEYSTORE"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.solers.security.password.PasswordFactoryBean">
                <property name="provider" ref="${password.provider.bean}"/>
                <property name="enumKey" value="com.solers.delivery.security.PasswordType.PKI_TRUSTSTORE"/>
            </bean>
        </constructor-arg>
        <constructor-arg value="${security.keystore}"/>
        <constructor-arg value="${security.truststore}"/>
        <constructor-arg ref="webCipherSuites"/>
        <constructor-arg value="false"/>
        <constructor-arg value="${ssl.session.timeout}"/>
        <constructor-arg>
            <bean class="com.solers.delivery.security.PRNGFactoryBean"/>
        </constructor-arg>
        <!--constructor-arg>
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass"><value>com.solers.delivery.security.SecurityProviderUtil</value></property>
                <property name="targetMethod"><value>getPRNG</value></property>
            </bean>
        </constructor-arg-->
    </bean>
    
     <!--bean id="myObject" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
   <property name="staticMethod"><value>com.solers.delivery.security.SecurityProviderUtil.getPRNG</value></property>
 </bean-->
    
    <bean id="sslConnectorHTTP" class="com.solers.security.jetty.SSLConnector" scope="singleton" depends-on="sslContext">
    <constructor-arg ref="jettyServerWeb" />
		<constructor-arg ref="sslContext" />
		<constructor-arg value="${web.port}"/>
		
		<property name="host" value="${web.host}"/>
		<property name="port" value="${web.port}" />
		<property name="statsOn" value="true" />
		
	</bean>
    
    <bean id="jettyServerWeb" class="org.eclipse.jetty.server.Server" init-method="start" destroy-method="stop">
		
        <property name="handler">
		<bean class="org.eclipse.jetty.server.handler.HandlerCollection">
		    <property name="handlers">
		        <list>
		            <bean class="org.eclipse.jetty.server.handler.ContextHandlerCollection">
		                <property name="handlers">
		                    <list>
		                        <bean class="org.eclipse.jetty.webapp.WebAppContext">
		                            <property name="contextPath" value="/" />
		                            <property name="war" value="${efd.home}/web" />
		                            <property name="extractWAR" value="true" />
		                            <property name="tempDirectory" value="${site.directory}/workdir/webapp" />
		                        </bean>
		                    </list>
		                </property>
		            </bean>
		        </list>
		    </property>
		</bean>
	    </property>
    </bean>
</beans>
